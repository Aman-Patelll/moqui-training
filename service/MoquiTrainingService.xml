<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">
<!--    <service verb="create" noun="MoquiTraining" type="entity-auto">-->
<!--        <in-parameters>-->
<!--            <auto-parameters entity-name="MoquiTraining" include="nonpk" />-->
<!--            <parameter name="trainingName" required="true" />-->
<!--            <parameter name="trainingDate"  />-->
<!--        </in-parameters>-->
<!--        <out-parameters>-->
<!--            <parameter name="trainingId" />-->
<!--        </out-parameters>-->
<!--    </service>-->
    
    <service verb="create" noun="MoquiTraining">
        <in-parameters>
            <auto-parameters entity-name="MoquiTraining" include="nonpk" />
            <parameter name="trainingName" required="true" />
            <parameter name="trainingDate"  />
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId" />
        </out-parameters>
        <actions>
            <service-call name="create#MoquiTraining" in-map="context" out-map="context" />
        </actions>
    </service>

    <!--<service verb="create" noun="MoquiTraining" type="script" location="component://moqui-training/service/createMoquiTraining.groovy">-->
    <!--    <in-parameters>-->
    <!--        <auto-parameters entity-name="MoquiTraining" include="nonpk" />-->
    <!--        <parameter name="trainingName" required="true" />-->
    <!--        <parameter name="trainingDate"  />-->
    <!--    </in-parameters>-->
    <!--    <out-parameters>-->
    <!--        <parameter name="trainingId" />-->
    <!--    </out-parameters>-->
    <!--</service>-->

    <service verb="find" noun="MoquiTraining">
        <description>Find Moqui Training records by trainingName or trainingId.</description>
        <in-parameters>
            <parameter name="trainingId" />
            <parameter name="trainingName" />
        </in-parameters>
        <out-parameters>
            <parameter name="trainingInfoList" type="List">
                <parameter name="trainingMap" type="Map">
                    <parameter name="trainingId" />
                    <parameter name="trainingName" />
                    <parameter name="trainingDate" />
                </parameter>
            </parameter>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.training.MoquiTraining" list="trainingInfoList" cache="false">
                <econdition field-name="trainingId"
                            ignore-if-empty="true" />
                <econdition field-name="trainingName"
                            operator="like"
                            value="%${trainingName}%"
                            ignore-case="true"
                            ignore-if-empty="true"/>

                <select-field field-name="trainingId"/>
                <select-field field-name="trainingName" />
                <select-field field-name="trainingDate" />
            </entity-find>
        </actions>
    </service>

    <service verb="store" noun="MoquiTraining">
        <in-parameters>
            <auto-parameters entity-name="moqui.training.MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true" />
            <parameter name="trainingDate" type="Timestamp" format="MM/dd" />
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId" />
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.training.MoquiTraining" list="moquiTrainingList">
                <econdition field-name="trainingName" ignore-case="true" />
            </entity-find>

            <if condition="moquiTrainingList">
                <then>
                    <log message="moquiTrainingList" />
                    <set field="training" from="moquiTrainingList.first" />
                    <entity-set value-field="training" />
                    <entity-update value-field="training"/>
                    <set field="trainingId" from="training.trainingId"/>
                </then>
                <else>
                    <service-call name="create#MoquiTraining" in-map="context" out-map="context"/>
                </else>
            </if>
        </actions>
    </service>

    <service verb="create" noun="Party">
        <in-parameters>
            <parameter name="partyType" />
            <parameter name="firstName"/>
            <parameter name="lastName" />
        </in-parameters>
        <out-parameters>
            <parameter name="partyId" />
        </out-parameters>
        <actions>
            <if condition="!partyType">
                <return error="true" message="Party Type is required." />
            </if>
            <if condition="!firstName">
                <return error="true" message="First Name is required." />
            </if>
            <if condition="!lastName">
                <return error="true" message="Last Name is required." />
            </if>

            <message type="success">
                Party Created SuccessFully
            </message>
        </actions>
    </service>

    <service verb="find" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="party" />
        </out-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party" />
            <if condition="!party">
                <return error="true" message="Id is incorrect" />
            </if>

            <message type="success">Party Fetch Successfully</message>
        </actions>
    </service>

    <service verb="store" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true"/>
            <parameter name="partyType"/>
            <parameter name="firstName"/>
            <parameter name="lastName" />
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party" />
            <if condition="!party">
                <return error="true" message="Id is incorrect" />
            </if>
            <entity-set value-field="party" />
            <entity-update value-field="party"/>
            <message type="success">Party Updated Successfully</message>
        </actions>
    </service>

    <service verb="delete" noun="Party">
        <in-parameters>
            <parameter name="partyId" required="true"/>
        </in-parameters>
        <actions>
            <entity-find-one entity-name="Party" value-field="party" />
            <if condition="!party">
                <return error="true" message="Id is incorrect" />
            </if>

            <message type="success">Party Deleted Successfully</message>
        </actions>
    </service>


</services>